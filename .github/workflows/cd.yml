name: Continuous Deployment

on:
  push:
    branches: [main]

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Permissão para escrever no GitHub Container Registry

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Login no GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build e Push da imagem
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:latest

  deploy:
    name: Deploy no Servidor EC2
    runs-on: ubuntu-latest
    needs: build-and-push # Só executa depois de a imagem estar pronta

    steps:
      - name: Configurar chave SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Executar comandos de deploy no servidor
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            cd ~/trabalhodevops
            
            # Faz o login no GHCR para poder descarregar a imagem privada do repositório
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            # Descarrega a imagem mais recente do registo
            docker compose pull
            
            # Inicia os serviços com a nova imagem (sem --build)
            docker compose up -d
          EOF
